##
# Copyright 2016 Dbvisit Software Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

##############################################################################
# Static configuration                                                       #
##############################################################################
#
# configuration name
name=dbvisit-replicate
# internal project version number
project.version=1.0
# replicate source connector class to start
connector.class=com.dbvisit.replicate.kafkaconnect.ReplicateSourceConnector
#

##############################################################################
# User configuration
##############################################################################
#
# maximum number of tasks to start for processing PLOGs
tasks.max=4
#
# prefix for all topic names
topic.prefix=REP-
#
# replicate PLOG location URI
plog.location.uri=file:/home/oracle/ktest/mine
#
# LCRs to keep before flushing, for connector this is the batch size, choose
# this value
plog.data.flush.size=1000
#
# time in milliseconds for one wait interval, used by scans and health check
plog.interval.time.ms=500
#
# number of intervals between scans, eg. 5 x 0.5s = 2.5s scan wait time
plog.scan.interval.count=5
#
# number of intervals between health checks, these are used when initially
# waiting for MINE to produce PLOGs, eg. 10 * 0.5s = 5.0s
plog.health.check.interval=10
#
# default number of health check scans to decide whether or not replicate 
# is offline, this is used as time out value
# for testing use 1 - quit after first health check
# 1 * 10 * 0.5s = 5s 
# where 10   is plog.health.check.interval value
#   and 0.5s is plog.interval.time.ms value
plog.scan.offline.interval=1000
#
# topic name for transaction meta data stream
topic.name.transaction.info=TX.META
#
# Global SCN when to start loading data during cold start
plog.global.scn.cold.start=0
